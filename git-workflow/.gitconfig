[user]
    name = Jane Doe
    email = jane.doe@online-rewards.com

[github]
    user = janedoe

[credential]
    helper = osxkeychain

[core]
    excludesfile = $HOME/.gitignore_global
    pager = less -FRSX
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
#    symlinks = false
    autocrlf = false

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto
    pager = true

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[diff]
    tool = vimdiff
    guitool = gvimdiff
[difftool]
    prompt = false

[merge]
    tool = vimdiff
    prompt = false
[mergetool]
    keepBackup = false
    prompt = false

[alias]
    inb = init --bare
    inbs = init --bare --shared
    abbrev = rev-parse --short
    amend = commit --amend
#    au = add -u .
    br = branch
#    brm = branch --merged
#    brnm = branch --no-merged
#    cat   = -p cat-file -p
    ci = commit
    cim = commit -m
    cima = commit -a -m
    cl = config -l
#    clg = config -l | grep
    co = checkout
    com = checkout master 
    cp = cherry-pick
#    cpnx = cherry-pick --no-commit -x
#    df = diff
    di = diff
    dic = diff --color-words
    dis = diff --stat
    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
    hard = reset --hard
    last  = cat-file commit HEAD
    lg = log --graph
    lgp = log --graph --pretty=oneline --abbrev-commit
    lgt = log --pretty=format:'%h : %s' --topo-order --graph
    lp = log -p
    lt = log --topo-order
    ls = ls-files
#    me = merge --no-commit --no-ff
    pu = push #--progress
    puo = push --progress origin
    pug = push --progress github
    rl = reflog
    re = remote
    renog = remote rename origin github
    reao = remote add origin
    rmc = rm --cached
    rmcf = rm -f --cached
    rnc = revert --no-commit
    sb = show-branch
    shown =show --name-only
    shp = stash pop
    sh = stash
    staged = diff --cached
#    sto   = st -o
    st = status
    stu = status --untracked-files=no
    unstaged = diff
    unstage = reset HEAD
#    up    = !git remote update ; git gc
#st    = "!f() { git ls-files --exclude-standard -t -u -s -m -d $@ | sed -e 's/C.*\t/C /' ; } ; f"
#cds   = !git ds --cached
#fp    = format-patch
#s     = "!git diff --name-status | sed -e 's/^/W /' ; git diff --cached --name-status | sed -e 's/^/C /'"
#debug = !GIT_PAGER= gdb --args git
#top = !eval cd "$(pwd)/$(git rev-parse --show-cdup)" && pwd
#push-head = !git push origin `git symbolic-ref HEAD`
#publish = push publish
#pushall = !git remote | xargs -n1 git push
#pushalltags = !git remote | xargs -n1 git push --tags
#tblog = log --not-grep='Auto-increment of build number due to changes in directory '
#tblg  = "!f() { git lg $@ | grep -v '^[^(]*Auto-increment of build number due to changes in directory ' | less ; } ; f"
#tbk   = !gitk --not-grep='Auto-increment of build number due to changes in directory '
#vgc = repack -f -a -d --depth=250 --window=250
#nvgc = !ionice -n7 nice -n20 git vgc
#svnup = !git config --get-regexp 'svn-remote.*url' | cut -d . -f 2 | xargs -n1 git svn fetch
#cvscommit = !git --git-dir=`cat CVS/GitDir` cvsexportcommit -c -p -v
#log1 = log --pretty=oneline --abbrev-commit --decorate
logd = log --oneline --graph --decorate --all
lgr = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
#lgn = "!f() { git log --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative $@ | git name-rev --stdin --name-only ; } ; f"
#findnext = rev-list --reverse -n1 HEAD..master
#checkoutnext = !git checkout `git findnext`
# example: git subdo pull
#subdo = submodule foreach git
#case = !sh -c 'exec /home/oxygen/bart/work/git-case/git-case.git/git-case-$0 ${0+"$@"}'
#edit-last-commit = !vim `git diff-tree -r --name-only HEAD HEAD~1`
#edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
#add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
#file-blame = !git ls-files | xargs -n1 -i{} git log -1 --pretty=format:\"%ci {}\" -- {}
#amend = commit --amend -C HEAD
#tbrev = "!f() { git show \"$1\":include/dsa_version.h | awk '/define DSA_VERSION_STRING_A/ { print $3 }' ; } ; f"
#test = !sh -c 'echo cmd=$1 arg1=$2 arg2=$3'
#dirstatus = !ls -d1 */.git | xargs -n1 -i{} sh -c \"cd {}/.. && echo Checking {} && git ls-files --exclude-standard -tousmd\"

